# Generated by Django 5.2.4 on 2025-07-30 08:50

import core.fields
import django.core.validators
import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_company_deleted_company_deleted_by_cascade_and_more'),
        ('sales', '0003_remove_variablecost_one_source_only_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('so_number', models.CharField(max_length=50, null=True, unique=True, verbose_name='SO #no')),
                ('payment_term', models.CharField(choices=[('NET_T', 'Net Vade'), ('DUE_ON_RECEIPT', 'Teslimde Ödeme'), ('CIA', 'Peşin Ödeme'), ('COD', 'Teslimde Nakit'), ('EOM', 'Ay Sonu'), ('PARTIAL_ADVANCE', 'Kısmi Peşin Ödeme'), ('LC', 'Akreditif'), ('TRADE_DISCOUNT', 'Ticari İskonto')], max_length=20, verbose_name='Ödeme Koşulları')),
                ('payment_method', models.CharField(choices=[('BANK_TRANSFER', 'Banka Havalesi'), ('CASH', 'Nakit'), ('CREDIT_CARD', 'Kredi Kartı'), ('CHEQUE', 'Çek'), ('EFT', 'EFT'), ('PROMISSORY_NOTE', 'Senet'), ('OTHER', 'Diğer')], max_length=20, verbose_name='Ödeme Yöntemi')),
                ('incoterms', models.CharField(choices=[('EXW', 'İşyerinde Teslim (EXW)'), ('FCA', 'Taşıyıcıya Teslim (FCA)'), ('FAS', 'Gemi Yanında Teslim (FAS)'), ('FOB', 'Gemiye Teslim (FOB)'), ('CFR', 'Navlun Dahil Teslim (CFR)'), ('CIF', 'Navlun ve Sigorta Dahil Teslim (CIF)'), ('CPT', 'Taşıma Ücreti Ödenmiş Teslim (CPT)'), ('CIP', 'Taşıma ve Sigorta Ücreti Ödenmiş Teslim (CIP)'), ('DAP', 'Varış Yerinde Teslim (DAP)'), ('DPU', 'Boşaltılmış Teslim (DPU)'), ('DDP', 'Gümrük Vergisi Ödenmiş Teslim (DDP)')], max_length=20, verbose_name='Teslim Şekli (Incoterms)')),
                ('trade_discount', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Ticari İskonto')),
                ('due_in_days', models.DurationField(verbose_name='Vade Günü')),
                ('due_discount', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Vade İskontosu')),
                ('due_discount_days', models.DurationField(null=True, verbose_name='Vade İskonto Günü')),
                ('invoice_date', models.DateField(null=True, verbose_name='Fatura Tebliğ Tarihi')),
                ('invoice_number', models.CharField(max_length=50, null=True, verbose_name='Fatura #no')),
                ('description', models.TextField(max_length=500, verbose_name='Açıklama')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('submitted', 'Sunuldu'), ('approved', 'Onaylandı'), ('dispatch_ordered', 'Sevk Emri Verildi'), ('billed', 'Faturalandı'), ('paid', 'Ödendi'), ('cancelled', 'İptal edildi')], default='draft', max_length=20, verbose_name='Durum')),
                ('currency', core.fields.CurrencyField(choices=[('TRY', 'Türk Lirası'), ('USD', 'ABD Doları'), ('EUR', 'Euro'), ('GBP', 'İngiliz Sterlini'), ('RUB', 'Rus Rublesi')], default='TRY', max_length=6)),
                ('delivery_address', models.CharField(max_length=250, null=True, verbose_name='Teslimat Adresi')),
                ('dispatch_ordered', models.BooleanField(default=False, verbose_name='Sevk emri verildi')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=21, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Miktar')),
                ('uom', core.fields.UOMField(choices=[('ADT', 'Adet'), ('KG', 'Kilogram'), ('G', 'Gram'), ('L', 'Litre'), ('ML', 'Mililitre'), ('M', 'Metre'), ('BOX', 'Koli'), ('PLT', 'Palet')], default='ADT', max_length=4, verbose_name='Birim')),
                ('quantity_sent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=21, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Sevk Edilen Miktar')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=32, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Birim Fiyat')),
                ('tax_rate', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Vergi Oranı')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Müşteri')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.material', verbose_name='Malzeme')),
                ('so', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='sales.salesorder', verbose_name='Satış Emri')),
            ],
            options={
                'permissions': [('submit_salesorder', 'Sales officer approval'), ('approve_salesorder', 'Customer approval registration'), ('dispatch_salesorder', 'Sales order dispatching'), ('cancel_salesorder', 'Sales order cancel permission'), ('bill_salesorder', 'Can set invoice issuance date, also means invoice is approved')],
            },
        ),
        migrations.CreateModel(
            name='HistoricalSalesOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('so_number', models.CharField(db_index=True, max_length=50, null=True, verbose_name='SO #no')),
                ('payment_term', models.CharField(choices=[('NET_T', 'Net Vade'), ('DUE_ON_RECEIPT', 'Teslimde Ödeme'), ('CIA', 'Peşin Ödeme'), ('COD', 'Teslimde Nakit'), ('EOM', 'Ay Sonu'), ('PARTIAL_ADVANCE', 'Kısmi Peşin Ödeme'), ('LC', 'Akreditif'), ('TRADE_DISCOUNT', 'Ticari İskonto')], max_length=20, verbose_name='Ödeme Koşulları')),
                ('payment_method', models.CharField(choices=[('BANK_TRANSFER', 'Banka Havalesi'), ('CASH', 'Nakit'), ('CREDIT_CARD', 'Kredi Kartı'), ('CHEQUE', 'Çek'), ('EFT', 'EFT'), ('PROMISSORY_NOTE', 'Senet'), ('OTHER', 'Diğer')], max_length=20, verbose_name='Ödeme Yöntemi')),
                ('incoterms', models.CharField(choices=[('EXW', 'İşyerinde Teslim (EXW)'), ('FCA', 'Taşıyıcıya Teslim (FCA)'), ('FAS', 'Gemi Yanında Teslim (FAS)'), ('FOB', 'Gemiye Teslim (FOB)'), ('CFR', 'Navlun Dahil Teslim (CFR)'), ('CIF', 'Navlun ve Sigorta Dahil Teslim (CIF)'), ('CPT', 'Taşıma Ücreti Ödenmiş Teslim (CPT)'), ('CIP', 'Taşıma ve Sigorta Ücreti Ödenmiş Teslim (CIP)'), ('DAP', 'Varış Yerinde Teslim (DAP)'), ('DPU', 'Boşaltılmış Teslim (DPU)'), ('DDP', 'Gümrük Vergisi Ödenmiş Teslim (DDP)')], max_length=20, verbose_name='Teslim Şekli (Incoterms)')),
                ('trade_discount', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Ticari İskonto')),
                ('due_in_days', models.DurationField(verbose_name='Vade Günü')),
                ('due_discount', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Vade İskontosu')),
                ('due_discount_days', models.DurationField(null=True, verbose_name='Vade İskonto Günü')),
                ('invoice_date', models.DateField(null=True, verbose_name='Fatura Tebliğ Tarihi')),
                ('invoice_number', models.CharField(max_length=50, null=True, verbose_name='Fatura #no')),
                ('description', models.TextField(max_length=500, verbose_name='Açıklama')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('submitted', 'Sunuldu'), ('approved', 'Onaylandı'), ('dispatch_ordered', 'Sevk Emri Verildi'), ('billed', 'Faturalandı'), ('paid', 'Ödendi'), ('cancelled', 'İptal edildi')], default='draft', max_length=20, verbose_name='Durum')),
                ('currency', core.fields.CurrencyField(choices=[('TRY', 'Türk Lirası'), ('USD', 'ABD Doları'), ('EUR', 'Euro'), ('GBP', 'İngiliz Sterlini'), ('RUB', 'Rus Rublesi')], default='TRY', max_length=6)),
                ('delivery_address', models.CharField(max_length=250, null=True, verbose_name='Teslimat Adresi')),
                ('dispatch_ordered', models.BooleanField(default=False, verbose_name='Sevk emri verildi')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=21, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Miktar')),
                ('uom', core.fields.UOMField(choices=[('ADT', 'Adet'), ('KG', 'Kilogram'), ('G', 'Gram'), ('L', 'Litre'), ('ML', 'Mililitre'), ('M', 'Metre'), ('BOX', 'Koli'), ('PLT', 'Palet')], default='ADT', max_length=4, verbose_name='Birim')),
                ('quantity_sent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=21, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Sevk Edilen Miktar')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=32, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Birim Fiyat')),
                ('tax_rate', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Vergi Oranı')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.company', verbose_name='Müşteri')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.material', verbose_name='Malzeme')),
                ('so', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sales.salesorder', verbose_name='Satış Emri')),
            ],
            options={
                'verbose_name': 'historical sales order',
                'verbose_name_plural': 'historical sales orders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
