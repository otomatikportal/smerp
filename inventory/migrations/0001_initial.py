# Generated by Django 5.2.4 on 2025-07-21 10:06

import core.fields
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_contact_gender_historicalcontact_gender'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='İsim')),
                ('facility', models.CharField(choices=[('esenyurt', 'Esenyurt')], default='esenyurt', max_length=50, verbose_name='Tesis')),
                ('area', models.IntegerField(null=True, verbose_name='Bölge')),
                ('section', models.IntegerField(null=True, verbose_name='Sıra')),
                ('shelf', models.IntegerField(null=True, verbose_name='Raf')),
                ('bin', models.IntegerField(null=True, verbose_name='Bölme')),
                ('type', models.CharField(choices=[('industrial_shelf', 'Raf'), ('exit_transit', 'Sevk transit'), ('injection_transit', 'Enjeksiyondan depoya'), ('manufacturing_transit', 'Montajdan depoya'), ('resin_storage', 'Plastik hammadde'), ('masterbatch', 'Masterbatch'), ('chemical', 'Kimyasal'), ('unlabeled', 'Bildirilmemiş'), ('temporary', 'Geçici')], default='unlabeled', max_length=50, verbose_name='Tipi')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom', core.fields.UOMField(choices=[('ADT', 'Adet'), ('KG', 'Kilogram'), ('G', 'Gram'), ('L', 'Litre'), ('ML', 'Mililitre'), ('M', 'Metre'), ('BOX', 'Koli'), ('PLT', 'Palet')], default='ADT', max_length=4, verbose_name='Birim')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=30, verbose_name='Miktar')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.material', verbose_name='Malzeme')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorylocation', verbose_name='Konum')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalInventory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uom', core.fields.UOMField(choices=[('ADT', 'Adet'), ('KG', 'Kilogram'), ('G', 'Gram'), ('L', 'Litre'), ('ML', 'Mililitre'), ('M', 'Metre'), ('BOX', 'Koli'), ('PLT', 'Palet')], default='ADT', max_length=4, verbose_name='Birim')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=30, verbose_name='Miktar')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.material', verbose_name='Malzeme')),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.inventorylocation', verbose_name='Konum')),
            ],
            options={
                'verbose_name': 'historical inventory',
                'verbose_name_plural': 'historical inventorys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
